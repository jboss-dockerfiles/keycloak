{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "keycloak-https",
        "annotations": {
            "iconClass": "icon-sso",
            "tags": "keycloak",
            "version": "4.0.0.Beta2",
            "openshift.io/display-name": "Keycloak",
            "description": "An example Keycloak server with HTTPS. \n\nNOTE: If you are going to use an external database, you need to manualy inject the environment variables DB_USER and DB_PASSWORD from your database secret."
        }
    },
    "parameters": [
        {
            "displayName": "Application Name",
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "from": "maximum length of 253 lower case alphanumeric characters, -, and .",
            "value": "keycloak",
            "required": true
        },
        {
            "displayName": "Keycloak Administrator Username",
            "description": "Keycloak Server administrator username",
            "name": "KEYCLOAK_USER",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Keycloak Administrator Password",
            "description": "Keycloak Server administrator password",
            "name": "KEYCLOAK_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "DB Vendor",
            "description": "DB vendor (H2, POSTGRES, MYSQL or MARIADB)",
            "name": "DB_VENDOR",
            "value": "H2",
            "required": true
        },
        {
            "displayName": "DB ADDR",
            "description": "Specify the name of the database pod if you are going to use an external DB. The name of the DB pod should not be 'mysql' due to an keycloak internal bug",
            "name": "DB_ADDR",
            "from": "maximum length of 253 lower case alphanumeric characters, -, and .",
            "value": "",
            "required": false
        },
        {
            "displayName": "DB Port",
            "description": "DB port (default ports for H2 = 9123, MYSQL and MARIADB = 3306, POSTGRES = 5432",
            "name": "DB_PORT",
            "value": "9123",
            "required": true
        },
        {
            "displayName": "DB Database",
            "description": "Name of the DB scheme",
            "name": "DB_DATABASE",
            "value": "keycloak",
            "required": true
        },
        {
            "displayName": "JDBC Parameters",
            "description": "additional database driver parameters, if you use 'useSSL=true', you manually need to add a certificate",
            "name": "JDBC_PARAMS",
            "value": "useSSL=false",
            "required": true
        },
        {
            "displayName": "Namespace used for DNS discovery",
            "description": "This namespace is a part of DNS query sent to Kubernetes API. This query allows the DNS_PING protocol to extract cluster members. This parameter might be removed once https://issues.jboss.org/browse/JGRP-2292 is implemented. Should be project name without '.svc.cluster.local' ",
            "name": "NAMESPACE",
            "required": true
        },
        {
            "displayName": "Custom http Route Hostname",
            "description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "displayName": "Custom https Route Hostname",
            "description": "Custom hostname for https service route. Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTPS",
            "value": "",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's http port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "secure-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's https port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-https",
            "metadata": {
                "name": "secure-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's https service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                },
                "tls": {
                    "termination": "passthrough"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "jboss/keycloak-openshift",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/auth/realms/master",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60
                                },
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/auth/realms/master",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "failureThreshold": 10
                                },
                                "env": [
                                    {
                                        "name": "KEYCLOAK_USER",
                                        "value": "${KEYCLOAK_USER}"
                                    },
                                    {
                                        "name": "KEYCLOAK_PASSWORD",
                                        "value": "${KEYCLOAK_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_VENDOR",
                                        "value": "${DB_VENDOR}"
                                    },
                                    {
                                        "name": "DB_ADDR",
                                        "value": "${DB_ADDR}"
                                    },
                                    {
                                        "name": "DB_PORT",
                                        "value": "${DB_PORT}"
                                    },
                                    {
                                        "name": "DB_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "JDBC_PARAMS",
                                        "value": "${JDBC_PARAMS}"
                                    },
                                    {
                                        "name": "JGROUPS_DISCOVERY_PROTOCOL",
                                        "value": "dns.DNS_PING"
                                    },
                                    {
                                        "name": "JGROUPS_DISCOVERY_PROPERTIES",
                                        "value": "${APPLICATION_NAME}.${NAMESPACE}.svc.cluster.local"
                                    }         
                                ],
                                "securityContext": {
                                    "privileged": false
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}
